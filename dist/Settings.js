"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const path = require("path");
const devMode = process.env.RUN_MODE && process.env.RUN_MODE.trim() === "dev";
if (devMode) {
    console.log("Running in dev mode");
}
const projectPath = path.resolve(__dirname, devMode ? "../" : "../../../");
const pkg = require(path.resolve(projectPath, "package.json"));
exports.defaultSettings = {
    branchName: "trunk",
    environment: "Sandbox",
    testProjectName: "TestProject.mpk"
};
exports.getSettings = () => {
    const localSettingFile = path.resolve(projectPath, "localSettings.js");
    let settings = exports.defaultSettings;
    if (fs.existsSync(localSettingFile)) {
        console.log("Running with local settings from " + localSettingFile);
        const localFileSettings = require(localSettingFile).settings;
        console.log("localFileSettings", localFileSettings);
        settings = Object.assign({}, settings, localFileSettings);
        checkSettings(settings);
    }
    else if (process.env.CI) {
        console.log("Running with CI settings");
        checkEnvVars();
        settings = {
            appName: process.env.MX_APP_NAME,
            branchName: process.env.MX_BRANCH_NAME || exports.defaultSettings.branchName,
            environment: process.env.MX_ENVIRONMENT || exports.defaultSettings.environment,
            key: process.env.MX_API_KEY,
            password: process.env.MX_PASSWORD,
            projectId: process.env.MX_PROJECT_ID,
            testProjectName: process.env.MX_TEST_PROJECT_NAME || exports.defaultSettings.testProjectName,
            user: process.env.MX_USER
        };
        if (process.env.MX_API_URL) {
            settings.apiUrl = process.env.MX_API_URL;
        }
        if (process.env.MX_TEAM_SERVER_URL) {
            settings.teamServerUrl = process.env.MX_TEAM_SERVER_URL;
        }
    }
    else {
        throw Error("No config found, for local config add 'localConfig.js'");
    }
    const distFolder = path.resolve(projectPath, "dist");
    settings.folder = {
        build: path.resolve(distFolder, "mxbuild"),
        dist: distFolder,
        release: path.resolve(distFolder, "release")
    };
    settings.widget = {
        name: pkg.widgetName,
        version: pkg.version
    };
    return settings;
};
function checkEnvVars() {
    const vars = ["MX_APP_NAME", "MX_API_KEY", "MX_PASSWORD", "MX_PROJECT_ID", "MX_USER"];
    const missingVars = vars.filter(varName => !process.env[varName]);
    if (missingVars.length > 0) {
        throw Error("Missing environment variable: " + missingVars.join(", "));
    }
}
function checkSettings(settings) {
    const minimalSettings = ["appName", "key", "password", "projectId", "user"];
    const missingSettings = minimalSettings.filter(varName => !settings[varName]);
    if (missingSettings.length > 0) {
        throw Error("Missing setting: " + missingSettings.join(", "));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2V0dGluZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU2V0dGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5QkFBeUI7QUFDekIsNkJBQTZCO0FBRzdCLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxJQUFhLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUyxDQUFDLElBQUksRUFBRSxLQUFLLEtBQUssQ0FBQztBQUN4RixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQ1YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBQ3ZDLENBQUM7QUFFRCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxPQUFPLEdBQUcsS0FBSyxHQUFHLFdBQVcsQ0FBQyxDQUFDO0FBQzNFLE1BQU0sR0FBRyxHQUFRLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO0FBMEJ2RCxRQUFBLGVBQWUsR0FBb0I7SUFDNUMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFNBQVM7SUFDdEIsZUFBZSxFQUFFLGlCQUFpQjtDQUNyQyxDQUFDO0FBUVcsUUFBQSxXQUFXLEdBQUc7SUFDdkIsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQ3ZFLElBQUksUUFBUSxHQUFvQix1QkFBZSxDQUFDO0lBQ2hELEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQ0FBbUMsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3BFLE1BQU0saUJBQWlCLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsUUFBUSxD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